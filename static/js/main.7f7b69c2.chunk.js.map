{"version":3,"sources":["components/Display/index.module.css","components/Editor/index.module.css","components/Usage/index.module.css","components/SyncState/index.module.css","App.module.css","demo.ts","features/dom.ts","utils/convertToInlineCss.ts","features/editor.ts","components/Editor/index.tsx","components/Display/index.tsx","components/Usage/content.ts","components/Usage/index.tsx","components/SyncState/index.tsx","App.tsx","app/store.ts","serviceWorker.js","index.tsx"],"names":["module","exports","prettier","format","process","parser","plugins","htmlParser","initialState","code","demo","domSlice","createSlice","name","reducers","update","state","action","htmlString","dom","DOMParser","parseFromString","querySelectorAll","forEach","e","rule","sheet","cssRules","i","cssText","match","slice","selector","style","d","length","remove","querySelector","innerHTML","convertToInlineCss","payload","actions","selectDom","updated","Date","now","sync","editorSlice","edit","replace","extraReducers","builder","addCase","updateDom","selectEditor","editor","Editor","dispatch","useDispatch","id","value","onValueChange","highlight","Prism","languages","html","padding","fontFamily","fontSize","React","memo","Display","ref","useRef","observer","MutationObserver","mutationsList","document","getElementById","display","useEffect","current","observe","subtree","childList","attributes","characterData","disconnect","dangerouslySetInnerHTML","__html","content","usage","map","className","footer","App","useSelector","container","github","href","version","width","height","viewBox","fillRule","row","convert","onClick","SyncState","Usage","store","configureStore","reducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,4B,uCCA3BD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,IAAM,iBAAiB,OAAS,oBAAoB,QAAU,uB,kICEpGC,MAASC,OAAT,svBAMCC,gBAND,wDASb,CAAEC,OAAQ,OAAQC,QAAS,CAACC,O,QCH9B,IAAMC,EAAe,CACnBC,KAAMC,GAGKC,EAAWC,YAAY,CAClCC,KAAM,MACNL,eACAM,SAAU,CACRC,OAAQ,SAACC,EAAOC,GACdD,EAAMP,KClBG,SAA4BS,GAAqB,IAAD,EACvDC,GAAM,IAAIC,WAAYC,gBAAgBH,EAAY,aAmBxD,OAjBAC,EAAIG,iBAAiB,SAASC,SAAQ,SAAAC,GAAM,IAAD,EACnCC,EAAI,UAAGD,EAAEE,aAAL,aAAG,EAASC,SACtB,GAAKF,EAAL,CAEA,IAJyC,eAIhCG,GAJgC,MAMvC,GACE,UAAAH,EAAKG,GAAGC,QAAQC,MAAM,qBAAtB,eAAqCC,MAAM,KAAM,GADnD,mBAAOC,EAAP,KAAiBC,EAAjB,KAIAd,EAAIG,iBAA8BU,GAAUT,SAAQ,SAAAW,GAClDA,EAAED,MAAMJ,SAAWI,MAPdL,EAAI,EAAGA,GAAC,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMU,QAAaP,IAAM,EAApCA,GAUTJ,EAAEY,cAGG,UAAAjB,EAAIkB,cAAc,eAAlB,eAA2BC,YAAapB,EDF9BqB,CAAmBtB,EAAOuB,aAK9BzB,EAAWJ,EAAS8B,QAApB1B,OAEF2B,EAAY,SAAC1B,GAAD,OAAsBA,EAAMG,KAEtCR,IAAf,QEjBMH,EAAe,CACnBC,KAAMC,EACNiC,QAASC,KAAKC,MACdC,MAAM,GAGKC,EAAcnC,YAAY,CACrCC,KAAM,SACNL,eACAM,SAAU,CACRkC,KAAM,SAAChC,EAAOC,GACZD,EAAMP,KAAOQ,EAAOuB,QAAQS,QAC1B,sDACA,IAEFjC,EAAM8B,MAAO,GAEf/B,OAAQ,SAACC,EAAOC,GACdD,EAAMP,KAAOQ,EAAOuB,QAAQS,QAC1B,sDACA,IAEFjC,EAAM8B,MAAO,IAGjBI,cAAe,SAAAC,GACbA,EAAQC,QAAQC,GAAW,SAACrC,EAAOC,GACjCD,EAAM8B,MAAO,QAKZ,EAAyBC,EAAYN,QAA7BO,EAAR,EAAQA,KAAMjC,EAAd,EAAcA,OAERuC,EAAe,SAACtC,GAAD,OAAsBA,EAAMuC,QAEzCR,IAAf,Q,kEChCMS,EAAS,SAAC,GAAyB,IAAvB/C,EAAsB,EAAtBA,KACVgD,EAAWC,cACjB,OACE,cAAC,IAAD,CACEC,GAAI1B,IAAMsB,OACVK,MAAOnD,EACPoD,cAAe,SAAApD,GAAI,OAAIgD,EAAST,EAAKvC,KACrCqD,UAAW,SAAArD,GAAI,OAAIsD,IAAMD,UAAUrD,EAAMsD,IAAMC,UAAUC,KAAM,SAC/DC,QAAS,GACTjC,MAAO,CACLkC,WAAY,sCACZC,SAAU,OAMHC,MAAMC,KAAKd,G,iBClBpBe,EAAU,SAAC,GAAyB,IAAvB9D,EAAsB,EAAtBA,KACX+D,EAAMC,iBAAO,MACbhB,EAAWC,cACXgB,EAAW,IAAIC,kBAAiB,SAACC,EAAeF,GAAc,IAAD,EACjEjB,EACE1C,EACEb,IAASC,QACP,UAAA0E,SAASC,eAAe7C,IAAM8C,gBAA9B,eAAwCzC,YAAa,GACrD,CAAEjC,OAAQ,OAAQC,QAAS,CAACC,YAmBpC,OAbA8D,IAAMW,WAAU,WASd,OARIR,EAAIS,SACNP,EAASQ,QAAQV,EAAIS,QAAS,CAC5BE,SAAS,EACTC,WAAW,EACXC,YAAY,EACZC,eAAe,IAGZ,WACLZ,EAASa,gBAEV,IAED,qBACEf,IAAKA,EACLb,GAAI1B,IAAM8C,QACVS,wBAAyB,CAAEC,OAAQhF,MAK1B4D,MAAMC,KAAKC,GC1CXmB,EAPC,CACd,iEACA,sGACA,gCACA,2D,iBCCIlC,EAAS,WACb,OACE,sBAAKG,GAAI1B,IAAM0D,MAAf,UACE,uCACA,6BACGD,EAAQE,KAAI,SAACpE,EAAGI,GAAJ,OACX,6BAAaJ,GAAJI,YAOJyC,MAAMC,KAAKd,G,iBCVpBA,EAAS,SAAC,GAAyB,IAAvBV,EAAsB,EAAtBA,KAChB,OACE,wBAAQ+C,UAAW5D,IAAM6D,OAAzB,SACGhD,EAAO,iBAAc,qBAKbuB,MAAMC,KAAKd,G,gBCJpBuC,EAAM,WACV,IAAMxC,EAASyC,YAAY1C,GACrBnC,EAAM6E,YAAYtD,GAClBe,EAAWC,cAMjB,OACE,sBAAKmC,UAAW5D,IAAMgE,UAAtB,UACE,8CAEE,oBACEJ,UAAW5D,IAAMiE,OACjBC,KAAK,2CAFP,+BAKE,qBAAKC,QAAQ,MAAMC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAlD,SACE,sBACEC,SAAS,UACTtE,EAAE,ukBAKV,sBAAK2D,UAAW5D,IAAMwE,IAAtB,UACE,cAAC,EAAD,CAAQhG,KAAM8C,EAAO9C,OACrB,wBAAQkD,GAAI1B,IAAMyE,QAASC,QAvBZ,WACnBlD,EAAS1C,EAAOwC,EAAO9C,QAsBnB,qBAGA,cAAC,EAAD,CAASA,KAAMU,EAAIV,UAGrB,cAACmG,EAAD,CAAW9D,KAAMS,EAAOT,OACxB,cAAC+D,EAAD,QAKSxC,MAAMC,KAAKyB,GChDbe,EAAQC,YAAe,CAClCC,QAAS,CACPzD,OAAQR,EACR5B,IAAKR,KCKWsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStF,MACvB,2DCVNuF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJjC,SAASC,eAAe,QDqHpB,kBAAmB0C,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.7f7b69c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__1Qv7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__3K1fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usage\":\"Usage_usage__3jFSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"SyncState_footer__3Zcjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"row\":\"App_row__1s1ax\",\"github\":\"App_github__2zfEA\",\"convert\":\"App_convert__3XtUw\"};","import prettier from 'prettier/standalone'\nimport htmlParser from 'prettier/parser-html'\n\nexport default prettier.format(\n  `\n  <div>\n    <h1>Hi I'm Emma</h1>\n    <a href=\"https://github.com/emma2334\">Here's my GitHub</a>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam faucibus facilisis magna id ultrices. In placerat pharetra bibendum. Nulla facilisis, mi vel varius finibus, lorem leo tincidunt eros, eget congue tortor mi lobortis quam. Donec pulvinar diam nec nunc consequat condimentum. Nunc viverra, leo vitae varius feugiat, lorem sapien dignissim tortor, nec elementum nunc sem nec metus. Sed gravida ligula eget enim accumsan elementum. Fusce quis est vel ligula dictum imperdiet. Phasellus ut placerat odio. Praesent quis iaculis ante, at vehicula erat. Sed eget tristique orci. Duis mollis nec massa eu dictum.</p>\n    <img src=\"${process.env.PUBLIC_URL}/emma-bear.png\" style=\"width: 300px;\">\n  </div>\n  `,\n  { parser: 'html', plugins: [htmlParser] },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport type { RootState } from '../app/store'\nimport demo from '../demo'\nimport convertToInlineCss from '../utils/convertToInlineCss'\n\ninterface DomState {\n  code: string\n}\n\nconst initialState = {\n  code: demo,\n} as DomState\n\nexport const domSlice = createSlice({\n  name: 'dom',\n  initialState,\n  reducers: {\n    update: (state, action) => {\n      state.code = convertToInlineCss(action.payload)\n    },\n  },\n})\n\nexport const { update } = domSlice.actions\n\nexport const selectDom = (state: RootState) => state.dom\n\nexport default domSlice.reducer\n","export default function convertToInlineCss(htmlString: string) {\n  const dom = new DOMParser().parseFromString(htmlString, 'text/html')\n  // Get all style tags\n  dom.querySelectorAll('style').forEach(e => {\n    const rule = e.sheet?.cssRules\n    if (!rule) return\n\n    for (let i = 0; i < rule?.length || 0; i++) {\n      // Get selector and css style\n      const [selector, style] =\n        rule[i].cssText.match(/(.*){(.*)}/)?.slice(1) || []\n\n      // Apply style to dom\n      dom.querySelectorAll<HTMLElement>(selector).forEach(d => {\n        d.style.cssText += style\n      })\n    }\n    e.remove()\n  })\n\n  return dom.querySelector('body')?.innerHTML || htmlString\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport type { RootState } from '../app/store'\nimport { update as updateDom } from './dom'\nimport demo from '../demo'\n\ninterface EditorState {\n  code: string\n  sync: boolean\n}\n\nconst initialState = {\n  code: demo,\n  updated: Date.now(),\n  sync: true,\n} as EditorState\n\nexport const editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    edit: (state, action) => {\n      state.code = action.payload.replace(\n        /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n        '',\n      )\n      state.sync = false\n    },\n    update: (state, action) => {\n      state.code = action.payload.replace(\n        /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n        '',\n      )\n      state.sync = true\n    },\n  },\n  extraReducers: builder => {\n    builder.addCase(updateDom, (state, action) => {\n      state.sync = true\n    })\n  },\n})\n\nexport const { edit, update } = editorSlice.actions\n\nexport const selectEditor = (state: RootState) => state.editor\n\nexport default editorSlice.reducer\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { edit } from '../../features/editor'\n\nimport CodeEditor from 'react-simple-code-editor'\nimport Prism from 'prismjs'\nimport 'prismjs/themes/prism.css'\n\nimport style from './index.module.css'\n\ninterface PropsType {\n  code: string\n}\n\nconst Editor = ({ code }: PropsType) => {\n  const dispatch = useDispatch()\n  return (\n    <CodeEditor\n      id={style.editor}\n      value={code}\n      onValueChange={code => dispatch(edit(code))}\n      highlight={code => Prism.highlight(code, Prism.languages.html, 'html')}\n      padding={10}\n      style={{\n        fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n        fontSize: 12,\n      }}\n    />\n  )\n}\n\nexport default React.memo(Editor)\n","import React, { useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport prettier from 'prettier/standalone'\nimport htmlParser from 'prettier/parser-html'\n\nimport { update } from '../../features/editor'\n\nimport style from './index.module.css'\n\ninterface PropsType {\n  code: string\n}\n\nconst Display = ({ code }: PropsType) => {\n  const ref = useRef(null)\n  const dispatch = useDispatch()\n  const observer = new MutationObserver((mutationsList, observer) => {\n    dispatch(\n      update(\n        prettier.format(\n          document.getElementById(style.display)?.innerHTML || '',\n          { parser: 'html', plugins: [htmlParser] },\n        ),\n      ),\n    )\n  })\n\n  React.useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        characterData: true,\n      })\n    }\n    return () => {\n      observer.disconnect()\n    }\n  }, [])\n  return (\n    <div\n      ref={ref}\n      id={style.display}\n      dangerouslySetInnerHTML={{ __html: code }}\n    />\n  )\n}\n\nexport default React.memo(Display)\n","const content = [\n  'Edit the code in editor and click \"Convert\" button to preview.',\n  'Open inspector and modify dom in #display, the code would be synced to editor whenever DOM changes.',\n  'Script tags would be removed.',\n  'Styles in style tags would be convert to inline styles.',\n]\n\nexport default content\n","import React from 'react'\nimport content from './content'\n\nimport style from './index.module.css'\n\nconst Editor = () => {\n  return (\n    <div id={style.usage}>\n      <h3>Usage</h3>\n      <ul>\n        {content.map((e, i) => (\n          <li key={i}>{e}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default React.memo(Editor)\n","import React from 'react'\n\nimport style from './index.module.css'\n\ninterface PropsType {\n  sync: boolean\n}\n\nconst Editor = ({ sync }: PropsType) => {\n  return (\n    <footer className={style.footer}>\n      {sync ? 'Synced! ✅' : 'Unsynced ❌'}\n    </footer>\n  )\n}\n\nexport default React.memo(Editor)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { selectEditor } from './features/editor'\nimport { update, selectDom } from './features/dom'\nimport Editor from './components/Editor'\nimport Display from './components/Display'\nimport Usage from './components/Usage'\nimport SyncState from './components/SyncState'\n\nimport style from './App.module.css'\n\nconst App = () => {\n  const editor = useSelector(selectEditor)\n  const dom = useSelector(selectDom)\n  const dispatch = useDispatch()\n\n  const convertToDom = () => {\n    dispatch(update(editor.code))\n  }\n\n  return (\n    <div className={style.container}>\n      <h1>\n        Dom Observer\n        <a\n          className={style.github}\n          href=\"https://github.com/emma2334/Dom-Observer\"\n        >\n          View on GitHub&nbsp;\n          <svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n            />\n          </svg>\n        </a>\n      </h1>\n      <div className={style.row}>\n        <Editor code={editor.code} />\n        <button id={style.convert} onClick={convertToDom}>\n          Convert\n        </button>\n        <Display code={dom.code} />\n      </div>\n\n      <SyncState sync={editor.sync} />\n      <Usage />\n    </div>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport editorSlice from '../features/editor'\nimport domSlice from '../features/dom'\n\nexport const store = configureStore({\n  reducer: {\n    editor: editorSlice,\n    dom: domSlice,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('app'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}